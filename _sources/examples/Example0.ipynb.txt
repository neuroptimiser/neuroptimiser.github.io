{
 "cells": [
  {
   "metadata": {},
   "cell_type": "markdown",
   "source": [
    "# Example 0: The Simplest Neuroptimiser\n",
    "This example demonstrates how to use the Neuroptimiser library to solve a dummy optimisation problem."
   ],
   "id": "8adf569f028839ad"
  },
  {
   "metadata": {},
   "cell_type": "markdown",
   "source": [
    "## 1. Setup\n",
    "Import minimal necessary libraries."
   ],
   "id": "fb33b2b07c748040"
  },
  {
   "cell_type": "code",
   "id": "initial_id",
   "metadata": {
    "collapsed": true,
    "ExecuteTime": {
     "end_time": "2025-08-29T10:40:50.244019Z",
     "start_time": "2025-08-29T10:40:50.186119Z"
    }
   },
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "from neuroptimiser import NeurOptimiser"
   ],
   "outputs": [],
   "execution_count": 1
  },
  {
   "metadata": {},
   "cell_type": "markdown",
   "source": [
    "## 2. Quick problem and optimiser setup\n",
    "We define a simple optimisation problem with a fitness function and bounds."
   ],
   "id": "f3a7caa4f24c16a2"
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-08-29T10:40:50.249222Z",
     "start_time": "2025-08-29T10:40:50.247463Z"
    }
   },
   "cell_type": "code",
   "source": [
    "problem_function    = lambda x: np.linalg.norm(x)\n",
    "problem_bounds      = np.array([[-5.0, 5.0], [-5.0, 5.0]])"
   ],
   "id": "ffcbc9470bdb0f38",
   "outputs": [],
   "execution_count": 2
  },
  {
   "metadata": {},
   "cell_type": "markdown",
   "source": "Then, we instantiate the Neuroptimiser with the default configurations.",
   "id": "f3bc216156714f0c"
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-08-29T10:40:50.260111Z",
     "start_time": "2025-08-29T10:40:50.257709Z"
    }
   },
   "cell_type": "code",
   "source": [
    "optimiser = NeurOptimiser()\n",
    "#optimiser = NeurOptimiser(core_params={\"hs_operator\": \"directional\", \"hs_variant\": \"pbest\"})\n",
    "# selector_params={\"sel_mode\": \"greedy\"}"
   ],
   "id": "8c6f19c161e212f2",
   "outputs": [],
   "execution_count": 3
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-08-29T10:40:50.271656Z",
     "start_time": "2025-08-29T10:40:50.268739Z"
    }
   },
   "cell_type": "code",
   "source": [
    "# Show the overall configuration parameters of the optimiser\n",
    "print(\"DEFAULT CONFIG PARAMS:\\n\", optimiser.config_params, \"\\n\")\n",
    "print(\"DEFAULT CORE PARAMS:\\n\", optimiser.core_params)\n",
    "print(\"\\nDEFAULT SELECTOR PARAMS:\\n\", optimiser.selector_params, \"\\n\")"
   ],
   "id": "cdf20b3ac7c0167f",
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "DEFAULT CONFIG PARAMS:\n",
      " {'spiking_core': 'TwoDimSpikingCore', 'num_neighbours': 1, 'neuron_topology': '2dr', 'function': None, 'search_space': array([[-1,  1],\n",
      "       [-1,  1]]), 'num_agents': 10, 'seed': 69, 'unit_topology': '2dr', 'num_dimensions': 2, 'core_params': {}, 'num_iterations': 300} \n",
      "\n",
      "DEFAULT CORE PARAMS:\n",
      " [{'hs_operator': 'differential', 'seed': None, 'thr_min': 1e-06, 'spk_q_ord': 2, 'spk_alpha': 0.25, 'coeffs': 'random', 'thr_mode': 'diff_pg', 'alpha': 1.0, 'thr_alpha': 1.0, 'noise_std': 0.1, 'thr_max': 1.0, 'spk_cond': 'l1', 'max_steps': 100, 'thr_k': 0.05, 'spk_weights': [0.5, 0.5], 'name': 'linear', 'is_bounded': False, 'dt': 0.01, 'approx': 'rk4', 'ref_mode': 'pgn', 'hs_variant': 'rand'}, {'hs_operator': 'differential', 'seed': None, 'thr_min': 1e-06, 'spk_q_ord': 2, 'spk_alpha': 0.25, 'coeffs': 'random', 'thr_mode': 'diff_pg', 'alpha': 1.0, 'thr_alpha': 1.0, 'noise_std': 0.1, 'thr_max': 1.0, 'spk_cond': 'l1', 'max_steps': 100, 'thr_k': 0.05, 'spk_weights': [0.5, 0.5], 'name': 'linear', 'is_bounded': False, 'dt': 0.01, 'approx': 'rk4', 'ref_mode': 'pgn', 'hs_variant': 'rand'}, {'hs_operator': 'differential', 'seed': None, 'thr_min': 1e-06, 'spk_q_ord': 2, 'spk_alpha': 0.25, 'coeffs': 'random', 'thr_mode': 'diff_pg', 'alpha': 1.0, 'thr_alpha': 1.0, 'noise_std': 0.1, 'thr_max': 1.0, 'spk_cond': 'l1', 'max_steps': 100, 'thr_k': 0.05, 'spk_weights': [0.5, 0.5], 'name': 'linear', 'is_bounded': False, 'dt': 0.01, 'approx': 'rk4', 'ref_mode': 'pgn', 'hs_variant': 'rand'}, {'hs_operator': 'differential', 'seed': None, 'thr_min': 1e-06, 'spk_q_ord': 2, 'spk_alpha': 0.25, 'coeffs': 'random', 'thr_mode': 'diff_pg', 'alpha': 1.0, 'thr_alpha': 1.0, 'noise_std': 0.1, 'thr_max': 1.0, 'spk_cond': 'l1', 'max_steps': 100, 'thr_k': 0.05, 'spk_weights': [0.5, 0.5], 'name': 'linear', 'is_bounded': False, 'dt': 0.01, 'approx': 'rk4', 'ref_mode': 'pgn', 'hs_variant': 'rand'}, {'hs_operator': 'differential', 'seed': None, 'thr_min': 1e-06, 'spk_q_ord': 2, 'spk_alpha': 0.25, 'coeffs': 'random', 'thr_mode': 'diff_pg', 'alpha': 1.0, 'thr_alpha': 1.0, 'noise_std': 0.1, 'thr_max': 1.0, 'spk_cond': 'l1', 'max_steps': 100, 'thr_k': 0.05, 'spk_weights': [0.5, 0.5], 'name': 'linear', 'is_bounded': False, 'dt': 0.01, 'approx': 'rk4', 'ref_mode': 'pgn', 'hs_variant': 'rand'}, {'hs_operator': 'differential', 'seed': None, 'thr_min': 1e-06, 'spk_q_ord': 2, 'spk_alpha': 0.25, 'coeffs': 'random', 'thr_mode': 'diff_pg', 'alpha': 1.0, 'thr_alpha': 1.0, 'noise_std': 0.1, 'thr_max': 1.0, 'spk_cond': 'l1', 'max_steps': 100, 'thr_k': 0.05, 'spk_weights': [0.5, 0.5], 'name': 'linear', 'is_bounded': False, 'dt': 0.01, 'approx': 'rk4', 'ref_mode': 'pgn', 'hs_variant': 'rand'}, {'hs_operator': 'differential', 'seed': None, 'thr_min': 1e-06, 'spk_q_ord': 2, 'spk_alpha': 0.25, 'coeffs': 'random', 'thr_mode': 'diff_pg', 'alpha': 1.0, 'thr_alpha': 1.0, 'noise_std': 0.1, 'thr_max': 1.0, 'spk_cond': 'l1', 'max_steps': 100, 'thr_k': 0.05, 'spk_weights': [0.5, 0.5], 'name': 'linear', 'is_bounded': False, 'dt': 0.01, 'approx': 'rk4', 'ref_mode': 'pgn', 'hs_variant': 'rand'}, {'hs_operator': 'differential', 'seed': None, 'thr_min': 1e-06, 'spk_q_ord': 2, 'spk_alpha': 0.25, 'coeffs': 'random', 'thr_mode': 'diff_pg', 'alpha': 1.0, 'thr_alpha': 1.0, 'noise_std': 0.1, 'thr_max': 1.0, 'spk_cond': 'l1', 'max_steps': 100, 'thr_k': 0.05, 'spk_weights': [0.5, 0.5], 'name': 'linear', 'is_bounded': False, 'dt': 0.01, 'approx': 'rk4', 'ref_mode': 'pgn', 'hs_variant': 'rand'}, {'hs_operator': 'differential', 'seed': None, 'thr_min': 1e-06, 'spk_q_ord': 2, 'spk_alpha': 0.25, 'coeffs': 'random', 'thr_mode': 'diff_pg', 'alpha': 1.0, 'thr_alpha': 1.0, 'noise_std': 0.1, 'thr_max': 1.0, 'spk_cond': 'l1', 'max_steps': 100, 'thr_k': 0.05, 'spk_weights': [0.5, 0.5], 'name': 'linear', 'is_bounded': False, 'dt': 0.01, 'approx': 'rk4', 'ref_mode': 'pgn', 'hs_variant': 'rand'}, {'hs_operator': 'differential', 'seed': None, 'thr_min': 1e-06, 'spk_q_ord': 2, 'spk_alpha': 0.25, 'coeffs': 'random', 'thr_mode': 'diff_pg', 'alpha': 1.0, 'thr_alpha': 1.0, 'noise_std': 0.1, 'thr_max': 1.0, 'spk_cond': 'l1', 'max_steps': 100, 'thr_k': 0.05, 'spk_weights': [0.5, 0.5], 'name': 'linear', 'is_bounded': False, 'dt': 0.01, 'approx': 'rk4', 'ref_mode': 'pgn', 'hs_variant': 'rand'}]\n",
      "\n",
      "DEFAULT SELECTOR PARAMS:\n",
      " {} \n",
      "\n"
     ]
    }
   ],
   "execution_count": 4
  },
  {
   "metadata": {},
   "cell_type": "markdown",
   "source": [
    "## 3. Optimisation process\n",
    "We proceed to solve the optimisation problem using the `solve` method of the `NeurOptimiser` process. In this example, we enable the debug mode to get more detailed output during the optimisation process."
   ],
   "id": "23ebe893982271b9"
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-08-29T10:41:03.422995Z",
     "start_time": "2025-08-29T10:40:50.280936Z"
    }
   },
   "cell_type": "code",
   "source": [
    "optimiser.solve(\n",
    "    obj_func=problem_function,\n",
    "    search_space=problem_bounds,\n",
    "    debug_mode=True,\n",
    "    num_iterations=1000,\n",
    ")"
   ],
   "id": "15d44d1385cd700b",
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[neuropt:log] Debug mode is enabled. Monitoring will be activated.\n",
      "[neuropt:log] Parameters are set up.\n",
      "[neuropt:log] Initial positions and topologies are set up.\n",
      "[neuropt:log] Tensor contraction layer, neighbourhood manager, and high-level selection unit are created.\n",
      "[neuropt:log] Population of nheuristic units is created.\n",
      "[neuropt:log] Connections between nheuristic units and auxiliary processes are established.\n",
      "[neuropt:log] Monitors are set up.\n",
      "[neuropt:log] Starting simulation with 1000 iterations...\n",
      "... step: 0, best fitness: 1.896372675895691\n",
      "... step: 100, best fitness: 0.0703522115945816\n",
      "... step: 200, best fitness: 0.01921817846596241\n",
      "... step: 300, best fitness: 0.01921817846596241\n",
      "... step: 400, best fitness: 0.01921817846596241\n",
      "... step: 500, best fitness: 0.01921817846596241\n",
      "... step: 600, best fitness: 0.01921817846596241\n",
      "... step: 700, best fitness: 0.01921817846596241\n",
      "... step: 800, best fitness: 0.01921817846596241\n",
      "... step: 900, best fitness: 0.01921817846596241\n",
      "... step: 999, best fitness: 0.01921817846596241\n",
      "[neuropt:log] Simulation completed. Fetching monitor data... done\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(array([0.01899177, 0.00294083]), array([0.01921818]))"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 5
  },
  {
   "metadata": {},
   "cell_type": "markdown",
   "source": [
    "## (Optional) 4. Results processing and visualisation\n",
    "We process the results obtained from the optimiser and visualise the absolute error in fitness values over the optimisation steps."
   ],
   "id": "8b985328ea61fba7"
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-08-29T10:41:03.471183Z",
     "start_time": "2025-08-29T10:41:03.466881Z"
    }
   },
   "cell_type": "code",
   "source": [
    "# Recover the results from the optimiser\n",
    "fp              = optimiser.results[\"fp\"]\n",
    "fg              = optimiser.results[\"fg\"]\n",
    "positions       = np.array(optimiser.results[\"p\"])\n",
    "best_position   = np.array(optimiser.results[\"g\"])\n",
    "v1              = np.array(optimiser.results[\"v1\"])\n",
    "v2              = np.array(optimiser.results[\"v2\"])\n",
    "\n",
    "# Calculate the absolute error in fitness values\n",
    "efp             = np.abs(np.array(fp))\n",
    "efg             = np.abs(np.array(fg))\n",
    "\n",
    "# Convert the spikes to integer type\n",
    "spikes          = np.array(optimiser.results[\"s\"]).astype(int)\n",
    "\n",
    "# Print some minimal information about the results\n",
    "print(f\"fg: {fg[-1][0]:.4f}, f*: {0.0:.4f}, error: {efg[-1][0]:.4e}\")\n",
    "print(f\"norm2(g - x*): {np.linalg.norm(best_position[-1]):.4e}\")\n",
    "print(f\"{v1.min():.4f} <= v1 <= {v1.max():.4f}\")\n",
    "print(f\"{v2.min():.4f} <= v2 <= {v2.max():.4f}\")"
   ],
   "id": "2ce73f98f2651bcb",
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "fg: 0.0192, f*: 0.0000, error: 1.9218e-02\n",
      "norm2(g - x*): 1.9218e-02\n",
      "-1.8394 <= v1 <= 0.9099\n",
      "-0.7884 <= v2 <= 0.9703\n"
     ]
    }
   ],
   "execution_count": 6
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-08-29T10:41:03.487338Z",
     "start_time": "2025-08-29T10:41:03.485394Z"
    }
   },
   "cell_type": "code",
   "source": [
    "num_steps, num_agents, num_dimensions  = positions.shape\n",
    "width = 6.9\n",
    "height = width * 0.618"
   ],
   "id": "4f07255dfb4c8ceb",
   "outputs": [],
   "execution_count": 7
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-08-29T10:41:03.878076Z",
     "start_time": "2025-08-29T10:41:03.496040Z"
    }
   },
   "cell_type": "code",
   "source": [
    "fig, ax = plt.subplots(figsize=(width, height))\n",
    "\n",
    "plt.plot(efp, color=\"silver\", alpha=0.5)\n",
    "plt.plot(np.max(efp, axis=1), '--', color=\"red\", label=r\"Max.\")\n",
    "plt.plot(np.average(efp, axis=1), '--', color=\"black\", label=r\"Mean\")\n",
    "plt.plot(np.median(efp, axis=1), '--', color=\"blue\", label=r\"Median\")\n",
    "plt.plot(efg, '--', color=\"green\", label=r\"Min.\")\n",
    "\n",
    "plt.xlabel(r\"Step, $t$\")\n",
    "plt.ylabel(r\"Abs. Error, $\\varepsilon_f$\")\n",
    "\n",
    "lgd = plt.legend(ncol=2, loc=\"lower left\")\n",
    "\n",
    "plt.xscale(\"log\")\n",
    "plt.yscale(\"log\")\n",
    "\n",
    "ax.patch.set_alpha(0)\n",
    "fig.tight_layout()"
   ],
   "id": "359cbb6cd7c18d57",
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 690x426.42 with 1 Axes>"
      ],
      "image/png": ""
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "execution_count": 8
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-08-29T10:41:03.944785Z",
     "start_time": "2025-08-29T10:41:03.886049Z"
    }
   },
   "cell_type": "code",
   "source": [
    "fig = plt.figure(figsize=(width/2, width/2))\n",
    "ax = fig.add_subplot(111, projection='3d')\n",
    "ax.set_proj_type('ortho')\n",
    "\n",
    "cmap = plt.get_cmap('viridis', num_agents)\n",
    "color = cmap(np.linspace(0, 1, num_agents))\n",
    "\n",
    "steps = np.arange(optimiser._num_iterations) + 1\n",
    "\n",
    "for agent, c in enumerate(color):\n",
    "    ax.plot3D(positions[:, agent, 0], positions[:, agent, 1], steps,\n",
    "              \"--o\", color=c, alpha=0.9, markersize=2, linewidth=1,\n",
    "              label=f\"Agent {agent}\")\n",
    "\n",
    "ax.plot3D(best_position[:, 0], best_position[:, 1], steps,\n",
    "          \"-\", color=\"red\", markersize=2,  linewidth=1.5,\n",
    "          label=\"Best position\")\n",
    "\n",
    "for axis in [ax.xaxis, ax.yaxis, ax.zaxis]:\n",
    "    axis.pane.set_edgecolor('black')\n",
    "    axis.pane.set_linewidth(1.0)\n",
    "\n",
    "# ax.viewfig, _init(elev=35, azim=135)\n",
    "ax.view_init(elev=30, azim=100)\n",
    "# ax.legend()\n",
    "ax.set_xlabel(r\"$x_1$\", labelpad=1)\n",
    "ax.set_ylabel(r\"$x_2$\", labelpad=1)\n",
    "ax.set_zlabel(r\"$t$\", labelpad=0)\n",
    "ax.set_box_aspect([1, 1, 0.8])\n",
    "\n",
    "ax.set_zlim(1, num_steps)\n",
    "\n",
    "ax.grid(False)\n",
    "ax.xaxis.pane.fill = False\n",
    "ax.yaxis.pane.fill = False\n",
    "ax.zaxis.pane.fill = False\n",
    "\n",
    "ax.patch.set_alpha(0)\n",
    "fig.subplots_adjust(left=0.1, right=0.95, top=0.95, bottom=0.1)\n",
    "\n",
    "ax.patch.set_alpha(0)\n",
    "fig.tight_layout()\n",
    "plt.show()"
   ],
   "id": "40460738c6fa4fb9",
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 345x345 with 1 Axes>"
      ],
      "image/png": ""
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "execution_count": 9
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-08-29T10:42:30.681857Z",
     "start_time": "2025-08-29T10:42:30.623083Z"
    }
   },
   "cell_type": "code",
   "source": [
    "# Spike rate analysis\n",
    "window = max(5, num_steps // 50)  # choose a small window\n",
    "# mean activity per step (across agents and dims)\n",
    "rate = spikes.mean(axis=(1, 2)).astype(float)\n",
    "\n",
    "# simple moving average\n",
    "kernel = np.ones(window) / window\n",
    "rate_ma = np.convolve(rate, kernel, mode='same')\n",
    "\n",
    "fig, ax = plt.subplots(figsize=(width*0.9, height*0.4))\n",
    "ax.plot(np.arange(num_steps), rate, alpha=0.4, label=\"Instantaneous\")\n",
    "ax.plot(np.arange(num_steps), rate_ma, linewidth=1.5, label=f\"MA (w={window})\")\n",
    "\n",
    "ax.set_xlabel(r\"Step, $t$\")\n",
    "ax.set_ylabel(r\"Spike rate\")\n",
    "ax.legend(loc=\"upper right\", ncol=2, frameon=False)\n",
    "\n",
    "ax.patch.set_alpha(0)\n",
    "fig.tight_layout()\n",
    "plt.show()"
   ],
   "id": "2baea6a1334e4672",
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 621x170.568 with 1 Axes>"
      ],
      "image/png": ""
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "execution_count": 14
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-08-29T10:41:04.104101Z",
     "start_time": "2025-08-29T10:41:04.102552Z"
    }
   },
   "cell_type": "code",
   "source": "",
   "id": "f6d65162f9370115",
   "outputs": [],
   "execution_count": null
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
