{
 "cells": [
  {
   "metadata": {},
   "cell_type": "markdown",
   "source": [
    "# Example 0: The Simplest Neuroptimiser\n",
    "This example demonstrates how to use the Neuroptimiser library to solve a dummy optimisation problem."
   ],
   "id": "8adf569f028839ad"
  },
  {
   "metadata": {},
   "cell_type": "markdown",
   "source": [
    "## 1. Setup\n",
    "Import minimal necessary libraries."
   ],
   "id": "fb33b2b07c748040"
  },
  {
   "cell_type": "code",
   "id": "initial_id",
   "metadata": {
    "collapsed": true,
    "ExecuteTime": {
     "end_time": "2025-09-24T09:42:14.128203Z",
     "start_time": "2025-09-24T09:42:14.056243Z"
    }
   },
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "from neuroptimiser import NeurOptimiser"
   ],
   "outputs": [],
   "execution_count": 1
  },
  {
   "metadata": {},
   "cell_type": "markdown",
   "source": [
    "## 2. Quick problem and optimiser setup\n",
    "We define a simple optimisation problem with a fitness function and bounds."
   ],
   "id": "f3a7caa4f24c16a2"
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-09-24T09:42:14.134341Z",
     "start_time": "2025-09-24T09:42:14.132408Z"
    }
   },
   "cell_type": "code",
   "source": [
    "problem_function    = lambda x: np.linalg.norm(x)\n",
    "problem_bounds      = np.array([[-5.0, 5.0], [-5.0, 5.0]])"
   ],
   "id": "ffcbc9470bdb0f38",
   "outputs": [],
   "execution_count": 2
  },
  {
   "metadata": {},
   "cell_type": "markdown",
   "source": "Then, we instantiate the Neuroptimiser with the default configurations.",
   "id": "f3bc216156714f0c"
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-09-24T09:42:14.147737Z",
     "start_time": "2025-09-24T09:42:14.145479Z"
    }
   },
   "cell_type": "code",
   "source": [
    "optimiser = NeurOptimiser()\n",
    "#optimiser = NeurOptimiser(core_params={\"hs_operator\": \"directional\", \"hs_variant\": \"pbest\"})\n",
    "# selector_params={\"sel_mode\": \"greedy\"}"
   ],
   "id": "8c6f19c161e212f2",
   "outputs": [],
   "execution_count": 3
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-09-24T09:42:14.159839Z",
     "start_time": "2025-09-24T09:42:14.157093Z"
    }
   },
   "cell_type": "code",
   "source": [
    "# Show the overall configuration parameters of the optimiser\n",
    "print(\"DEFAULT CONFIG PARAMS:\\n\", optimiser.config_params, \"\\n\")\n",
    "print(\"DEFAULT CORE PARAMS:\\n\", optimiser.core_params)\n",
    "print(\"\\nDEFAULT HIGH-LEVEL SELECTOR PARAMS:\\n\", optimiser.selector_params, \"\\n\")"
   ],
   "id": "cdf20b3ac7c0167f",
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "DEFAULT CONFIG PARAMS:\n",
      " {'num_neighbours': 1, 'unit_topology': '2dr', 'seed': 69, 'neuron_topology': '2dr', 'core_params': {}, 'search_space': array([[-1,  1],\n",
      "       [-1,  1]]), 'function': None, 'num_iterations': 300, 'spiking_core': 'TwoDimSpikingCore', 'num_agents': 10, 'num_dimensions': 2} \n",
      "\n",
      "DEFAULT CORE PARAMS:\n",
      " [{'hs_params': {}, 'max_steps': 100, 'thr_alpha': 1.0, 'coeffs': 'random', 'name': 'linear', 'hs_variant': 'rand', 'spk_weights': [0.5, 0.5], 'noise_std': 0.1, 'approx': 'rk4', 'spk_alpha': 0.25, 'spk_cond': 'l1', 'spk_q_ord': 2, 'hs_operator': 'differential', 'dt': 0.01, 'seed': None, 'thr_mode': 'diff_pg', 'is_bounded': False, 'sel_mode': 'greedy', 'thr_max': 1.0, 'thr_min': 1e-06, 'ref_mode': 'pgn', 'alpha': 1.0, 'thr_k': 0.05}, {'hs_params': {}, 'max_steps': 100, 'thr_alpha': 1.0, 'coeffs': 'random', 'name': 'linear', 'hs_variant': 'rand', 'spk_weights': [0.5, 0.5], 'noise_std': 0.1, 'approx': 'rk4', 'spk_alpha': 0.25, 'spk_cond': 'l1', 'spk_q_ord': 2, 'hs_operator': 'differential', 'dt': 0.01, 'seed': None, 'thr_mode': 'diff_pg', 'is_bounded': False, 'sel_mode': 'greedy', 'thr_max': 1.0, 'thr_min': 1e-06, 'ref_mode': 'pgn', 'alpha': 1.0, 'thr_k': 0.05}, {'hs_params': {}, 'max_steps': 100, 'thr_alpha': 1.0, 'coeffs': 'random', 'name': 'linear', 'hs_variant': 'rand', 'spk_weights': [0.5, 0.5], 'noise_std': 0.1, 'approx': 'rk4', 'spk_alpha': 0.25, 'spk_cond': 'l1', 'spk_q_ord': 2, 'hs_operator': 'differential', 'dt': 0.01, 'seed': None, 'thr_mode': 'diff_pg', 'is_bounded': False, 'sel_mode': 'greedy', 'thr_max': 1.0, 'thr_min': 1e-06, 'ref_mode': 'pgn', 'alpha': 1.0, 'thr_k': 0.05}, {'hs_params': {}, 'max_steps': 100, 'thr_alpha': 1.0, 'coeffs': 'random', 'name': 'linear', 'hs_variant': 'rand', 'spk_weights': [0.5, 0.5], 'noise_std': 0.1, 'approx': 'rk4', 'spk_alpha': 0.25, 'spk_cond': 'l1', 'spk_q_ord': 2, 'hs_operator': 'differential', 'dt': 0.01, 'seed': None, 'thr_mode': 'diff_pg', 'is_bounded': False, 'sel_mode': 'greedy', 'thr_max': 1.0, 'thr_min': 1e-06, 'ref_mode': 'pgn', 'alpha': 1.0, 'thr_k': 0.05}, {'hs_params': {}, 'max_steps': 100, 'thr_alpha': 1.0, 'coeffs': 'random', 'name': 'linear', 'hs_variant': 'rand', 'spk_weights': [0.5, 0.5], 'noise_std': 0.1, 'approx': 'rk4', 'spk_alpha': 0.25, 'spk_cond': 'l1', 'spk_q_ord': 2, 'hs_operator': 'differential', 'dt': 0.01, 'seed': None, 'thr_mode': 'diff_pg', 'is_bounded': False, 'sel_mode': 'greedy', 'thr_max': 1.0, 'thr_min': 1e-06, 'ref_mode': 'pgn', 'alpha': 1.0, 'thr_k': 0.05}, {'hs_params': {}, 'max_steps': 100, 'thr_alpha': 1.0, 'coeffs': 'random', 'name': 'linear', 'hs_variant': 'rand', 'spk_weights': [0.5, 0.5], 'noise_std': 0.1, 'approx': 'rk4', 'spk_alpha': 0.25, 'spk_cond': 'l1', 'spk_q_ord': 2, 'hs_operator': 'differential', 'dt': 0.01, 'seed': None, 'thr_mode': 'diff_pg', 'is_bounded': False, 'sel_mode': 'greedy', 'thr_max': 1.0, 'thr_min': 1e-06, 'ref_mode': 'pgn', 'alpha': 1.0, 'thr_k': 0.05}, {'hs_params': {}, 'max_steps': 100, 'thr_alpha': 1.0, 'coeffs': 'random', 'name': 'linear', 'hs_variant': 'rand', 'spk_weights': [0.5, 0.5], 'noise_std': 0.1, 'approx': 'rk4', 'spk_alpha': 0.25, 'spk_cond': 'l1', 'spk_q_ord': 2, 'hs_operator': 'differential', 'dt': 0.01, 'seed': None, 'thr_mode': 'diff_pg', 'is_bounded': False, 'sel_mode': 'greedy', 'thr_max': 1.0, 'thr_min': 1e-06, 'ref_mode': 'pgn', 'alpha': 1.0, 'thr_k': 0.05}, {'hs_params': {}, 'max_steps': 100, 'thr_alpha': 1.0, 'coeffs': 'random', 'name': 'linear', 'hs_variant': 'rand', 'spk_weights': [0.5, 0.5], 'noise_std': 0.1, 'approx': 'rk4', 'spk_alpha': 0.25, 'spk_cond': 'l1', 'spk_q_ord': 2, 'hs_operator': 'differential', 'dt': 0.01, 'seed': None, 'thr_mode': 'diff_pg', 'is_bounded': False, 'sel_mode': 'greedy', 'thr_max': 1.0, 'thr_min': 1e-06, 'ref_mode': 'pgn', 'alpha': 1.0, 'thr_k': 0.05}, {'hs_params': {}, 'max_steps': 100, 'thr_alpha': 1.0, 'coeffs': 'random', 'name': 'linear', 'hs_variant': 'rand', 'spk_weights': [0.5, 0.5], 'noise_std': 0.1, 'approx': 'rk4', 'spk_alpha': 0.25, 'spk_cond': 'l1', 'spk_q_ord': 2, 'hs_operator': 'differential', 'dt': 0.01, 'seed': None, 'thr_mode': 'diff_pg', 'is_bounded': False, 'sel_mode': 'greedy', 'thr_max': 1.0, 'thr_min': 1e-06, 'ref_mode': 'pgn', 'alpha': 1.0, 'thr_k': 0.05}, {'hs_params': {}, 'max_steps': 100, 'thr_alpha': 1.0, 'coeffs': 'random', 'name': 'linear', 'hs_variant': 'rand', 'spk_weights': [0.5, 0.5], 'noise_std': 0.1, 'approx': 'rk4', 'spk_alpha': 0.25, 'spk_cond': 'l1', 'spk_q_ord': 2, 'hs_operator': 'differential', 'dt': 0.01, 'seed': None, 'thr_mode': 'diff_pg', 'is_bounded': False, 'sel_mode': 'greedy', 'thr_max': 1.0, 'thr_min': 1e-06, 'ref_mode': 'pgn', 'alpha': 1.0, 'thr_k': 0.05}]\n",
      "\n",
      "DEFAULT SELECTOR PARAMS:\n",
      " {'mode': 'greedy'} \n",
      "\n"
     ]
    }
   ],
   "execution_count": 4
  },
  {
   "metadata": {},
   "cell_type": "markdown",
   "source": [
    "## 3. Optimisation process\n",
    "We proceed to solve the optimisation problem using the `solve` method of the `NeurOptimiser` process. In this example, we enable the debug mode to get more detailed output during the optimisation process."
   ],
   "id": "23ebe893982271b9"
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-09-24T09:42:27.845192Z",
     "start_time": "2025-09-24T09:42:14.167922Z"
    }
   },
   "cell_type": "code",
   "source": [
    "optimiser.solve(\n",
    "    obj_func=problem_function,\n",
    "    search_space=problem_bounds,\n",
    "    debug_mode=True,\n",
    "    num_iterations=1000,\n",
    ")"
   ],
   "id": "15d44d1385cd700b",
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[neuropt:log] Debug mode is enabled. Monitoring will be activated.\n",
      "[neuropt:log] Parameters are set up.\n",
      "[neuropt:log] Initial positions and topologies are set up.\n",
      "[neuropt:log] Tensor contraction layer, neighbourhood manager, and high-level selection unit are created.\n",
      "[neuropt:log] Population of nheuristic units is created.\n",
      "[neuropt:log] Connections between nheuristic units and auxiliary processes are established.\n",
      "[neuropt:log] Monitors are set up.\n",
      "[neuropt:log] Starting simulation with 1000 iterations...\n",
      "... step: 0, best fitness: 2.2048137187957764\n",
      "... step: 100, best fitness: 0.028028056025505066\n",
      "... step: 200, best fitness: 0.018760159611701965\n",
      "... step: 300, best fitness: 0.018760159611701965\n",
      "... step: 400, best fitness: 0.017059851437807083\n",
      "... step: 500, best fitness: 0.017059851437807083\n",
      "... step: 600, best fitness: 0.017059851437807083\n",
      "... step: 700, best fitness: 0.017059851437807083\n",
      "... step: 800, best fitness: 0.017059851437807083\n",
      "... step: 900, best fitness: 0.017059851437807083\n",
      "... step: 999, best fitness: 0.017059851437807083\n",
      "[neuropt:log] Simulation completed. Fetching monitor data... done\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(array([-0.00118961, -0.0170184 ]), 0.017059851437807083)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 5
  },
  {
   "metadata": {},
   "cell_type": "markdown",
   "source": [
    "## (Optional) 4. Results processing and visualisation\n",
    "We process the results obtained from the optimiser and visualise the absolute error in fitness values over the optimisation steps."
   ],
   "id": "8b985328ea61fba7"
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-09-24T09:42:29.254532Z",
     "start_time": "2025-09-24T09:42:29.249533Z"
    }
   },
   "cell_type": "code",
   "source": [
    "# Recover the results from the optimiser\n",
    "fp              = optimiser.results[\"fp\"]\n",
    "fg              = optimiser.results[\"fg\"]\n",
    "positions       = np.array(optimiser.results[\"p\"])\n",
    "best_position   = np.array(optimiser.results[\"g\"])\n",
    "v1              = np.array(optimiser.results[\"v1\"])\n",
    "v2              = np.array(optimiser.results[\"v2\"])\n",
    "\n",
    "# Calculate the absolute error in fitness values\n",
    "efp             = np.abs(np.array(fp))\n",
    "efg             = np.abs(np.array(fg))\n",
    "\n",
    "# Convert the spikes to integer type\n",
    "spikes          = np.array(optimiser.results[\"s\"]).astype(int)\n",
    "\n",
    "# Print some minimal information about the results\n",
    "print(f\"fg: {fg[-1][0]:.4f}, f*: {0.0:.4f}, error: {efg[-1][0]:.4e}\")\n",
    "print(f\"norm2(g - x*): {np.linalg.norm(best_position[-1]):.4e}\")\n",
    "print(f\"{v1.min():.4f} <= v1 <= {v1.max():.4f}\")\n",
    "print(f\"{v2.min():.4f} <= v2 <= {v2.max():.4f}\")"
   ],
   "id": "2ce73f98f2651bcb",
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "fg: 0.0171, f*: 0.0000, error: 1.7060e-02\n",
      "norm2(g - x*): 1.7060e-02\n",
      "-0.6703 <= v1 <= 1.3015\n",
      "-0.7715 <= v2 <= 1.0212\n"
     ]
    }
   ],
   "execution_count": 6
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-09-24T09:42:29.267632Z",
     "start_time": "2025-09-24T09:42:29.265815Z"
    }
   },
   "cell_type": "code",
   "source": [
    "num_steps, num_agents, num_dimensions  = positions.shape\n",
    "width = 6.9\n",
    "height = width * 0.618"
   ],
   "id": "4f07255dfb4c8ceb",
   "outputs": [],
   "execution_count": 7
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-09-24T09:42:29.725037Z",
     "start_time": "2025-09-24T09:42:29.272610Z"
    }
   },
   "cell_type": "code",
   "source": [
    "fig, ax = plt.subplots(figsize=(width, height))\n",
    "\n",
    "plt.plot(efp, color=\"silver\", alpha=0.5)\n",
    "plt.plot(np.max(efp, axis=1), '--', color=\"red\", label=r\"Max.\")\n",
    "plt.plot(np.average(efp, axis=1), '--', color=\"black\", label=r\"Mean\")\n",
    "plt.plot(np.median(efp, axis=1), '--', color=\"blue\", label=r\"Median\")\n",
    "plt.plot(efg, '--', color=\"green\", label=r\"Min.\")\n",
    "\n",
    "plt.xlabel(r\"Step, $t$\")\n",
    "plt.ylabel(r\"Abs. Error, $\\varepsilon_f$\")\n",
    "\n",
    "lgd = plt.legend(ncol=2, loc=\"lower left\")\n",
    "\n",
    "plt.xscale(\"log\")\n",
    "plt.yscale(\"log\")\n",
    "\n",
    "ax.patch.set_alpha(0)\n",
    "fig.tight_layout()"
   ],
   "id": "359cbb6cd7c18d57",
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 690x426.42 with 1 Axes>"
      ],
      "image/png": ""
     },
     "metadata": {},
     "output_type": "display_data",
     "jetTransient": {
      "display_id": null
     }
    }
   ],
   "execution_count": 8
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-09-24T09:42:29.795348Z",
     "start_time": "2025-09-24T09:42:29.730908Z"
    }
   },
   "cell_type": "code",
   "source": [
    "fig = plt.figure(figsize=(width/2, width/2))\n",
    "ax = fig.add_subplot(111, projection='3d')\n",
    "ax.set_proj_type('ortho')\n",
    "\n",
    "cmap = plt.get_cmap('viridis', num_agents)\n",
    "color = cmap(np.linspace(0, 1, num_agents))\n",
    "\n",
    "steps = np.arange(optimiser._num_iterations) + 1\n",
    "\n",
    "for agent, c in enumerate(color):\n",
    "    ax.plot3D(positions[:, agent, 0], positions[:, agent, 1], steps,\n",
    "              \"--o\", color=c, alpha=0.9, markersize=2, linewidth=1,\n",
    "              label=f\"Agent {agent}\")\n",
    "\n",
    "ax.plot3D(best_position[:, 0], best_position[:, 1], steps,\n",
    "          \"-\", color=\"red\", markersize=2,  linewidth=1.5,\n",
    "          label=\"Best position\")\n",
    "\n",
    "for axis in [ax.xaxis, ax.yaxis, ax.zaxis]:\n",
    "    axis.pane.set_edgecolor('black')\n",
    "    axis.pane.set_linewidth(1.0)\n",
    "\n",
    "# ax.viewfig, _init(elev=35, azim=135)\n",
    "ax.view_init(elev=30, azim=100)\n",
    "# ax.legend()\n",
    "ax.set_xlabel(r\"$x_1$\", labelpad=1)\n",
    "ax.set_ylabel(r\"$x_2$\", labelpad=1)\n",
    "ax.set_zlabel(r\"$t$\", labelpad=0)\n",
    "ax.set_box_aspect([1, 1, 0.8])\n",
    "\n",
    "ax.set_zlim(1, num_steps)\n",
    "\n",
    "ax.grid(False)\n",
    "ax.xaxis.pane.fill = False\n",
    "ax.yaxis.pane.fill = False\n",
    "ax.zaxis.pane.fill = False\n",
    "\n",
    "ax.patch.set_alpha(0)\n",
    "fig.subplots_adjust(left=0.1, right=0.95, top=0.95, bottom=0.1)\n",
    "\n",
    "ax.patch.set_alpha(0)\n",
    "fig.tight_layout()\n",
    "plt.show()"
   ],
   "id": "40460738c6fa4fb9",
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 345x345 with 1 Axes>"
      ],
      "image/png": "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"
     },
     "metadata": {},
     "output_type": "display_data",
     "jetTransient": {
      "display_id": null
     }
    }
   ],
   "execution_count": 9
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-09-24T09:42:29.850716Z",
     "start_time": "2025-09-24T09:42:29.804363Z"
    }
   },
   "cell_type": "code",
   "source": [
    "# Spike rate analysis\n",
    "window = max(5, num_steps // 50)  # choose a small window\n",
    "# mean activity per step (across agents and dims)\n",
    "rate = spikes.mean(axis=(1, 2)).astype(float)\n",
    "\n",
    "# simple moving average\n",
    "kernel = np.ones(window) / window\n",
    "rate_ma = np.convolve(rate, kernel, mode='same')\n",
    "\n",
    "fig, ax = plt.subplots(figsize=(width*0.9, height*0.4))\n",
    "ax.plot(np.arange(num_steps), rate, alpha=0.4, label=\"Instantaneous\")\n",
    "ax.plot(np.arange(num_steps), rate_ma, linewidth=1.5, label=f\"MA (w={window})\")\n",
    "\n",
    "ax.set_xlabel(r\"Step, $t$\")\n",
    "ax.set_ylabel(r\"Spike rate\")\n",
    "ax.legend(loc=\"upper right\", ncol=2, frameon=False)\n",
    "\n",
    "ax.patch.set_alpha(0)\n",
    "fig.tight_layout()\n",
    "plt.show()"
   ],
   "id": "2baea6a1334e4672",
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 621x170.568 with 1 Axes>"
      ],
      "image/png": "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"
     },
     "metadata": {},
     "output_type": "display_data",
     "jetTransient": {
      "display_id": null
     }
    }
   ],
   "execution_count": 10
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2025-09-24T09:42:29.861346Z",
     "start_time": "2025-09-24T09:42:29.859713Z"
    }
   },
   "cell_type": "code",
   "source": "",
   "id": "f6d65162f9370115",
   "outputs": [],
   "execution_count": null
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
